---
openapi: 3.0.0
info:
    title: Moony Admin
    version: '1.0'
servers:
    - url: /
paths:
    /app/health:
        get:
            description: server health info

            responses:
                '200':
                    description: Successful verification
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/app_health_200'
    /admins/master-data:
        get:
            description: api to get list of master data
            tags:
                - 'Master Data'
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/get_admins_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins/login:
        post:
            description: admin login api
            operationId: login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/login_request_body'

            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/login_response_body_200'
                '401':
                    description: Invalid login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/login_response_body_401'
                '404':
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins/deactivate-admin:
        put:
            description: api to deactivate admin
            tags:
                - 'Admin'
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/deactivate_admin_request_body'

            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/deactivate_admin_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '403':
                    description: Forbidden Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '404':
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins:
        get:
            description: api to get list of admins
            tags:
                - 'Admin'
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: page
                  required: false
                  description: 'page number'
                  schema:
                      type: number
                - in: query
                  name: pageSize
                  description: 'no of rows'
                  required: false
                  schema:
                      type: number
                - in: query
                  name: statusId
                  required: false
                  schema:
                      type: number
                - in: query
                  name: search
                  required: false
                  schema:
                      type: string
                - in: query
                  name: activeFrom
                  required: false
                  schema:
                      type: string
                      format: date-time
                - in: query
                  name: activeTo
                  required: false
                  schema:
                      type: string
                      format: date-time

            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/get_admins_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins/{id}:
        delete:
            description: api to delete admin
            tags:
                - 'Admin'
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: number
            responses:
                '200':
                    description: Success Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/deactivate_admin_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '403':
                    description: Forbidden Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '404':
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins/lookbooks:
        get:
            description: api to get list of lookbooks
            tags:
                - 'Admin'
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: noOfLooks
                  required: false
                  schema:
                      type: number
                - in: query
                  name: fromDate
                  required: false
                  schema:
                      type: string
                      format: date-time
                - in: query
                  name: toDate
                  required: false
                  schema:
                      type: string
                      format: date-time

            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/get_lookbooks_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins/update-admin:
        put:
            description: api to edit admin(names)
            tags:
                - 'Admin'
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/edit_admin_request_body'

            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/deactivate_admin_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '403':
                    description: Forbidden Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '404':
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'
    /admins/change-password:
        put:
            description: api to update admin password
            tags:
                - 'Admin'
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/change_password_request_body'

            responses:
                '200':
                    description: Success response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/deactivate_admin_success_response_200'
                '401':
                    description: Unauthorized Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '409':
                    description: Conflict Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_401_403'
                '404':
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response_body_404_500'

                '400':
                    description: Input bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/zod_errors_400'

components:
    securitySchemes:
        bearerAuth: # arbitrary name for the security scheme
            type: http
            scheme: bearer
            bearerFormat: JWT # optional, arbitrary value for documentation purposes
    schemas:
        app_health_200:
            properties:
                uptime:
                    type: number
                responseTime:
                    type: array
                    items:
                        type: number
                timestamp:
                    type: string
                    description: timestamp
                cpuUsage:
                    type: object
                    properties:
                        user:
                            type: number
                        system:
                            type: number
        login_request_body:
            properties:
                email:
                    type: string
                password:
                    type: string
        login_response_body_200:
            properties:
                data:
                    type: object
                    properties:
                        email:
                            type: string
                        firstname:
                            type: string
                        lastname:
                            type: string
                        token:
                            type: string
                        id:
                            type: integer
                        role:
                            type: object
                            properties:
                                id:
                                    type: integer
                                name:
                                    type: string
                        status:
                            type: object
                            properties:
                                id:
                                    type: integer
                                name:
                                    type: string
        login_response_body_401:
            properties:
                errors:
                    type: object
                    properties:
                        code:
                            type: string
                            enum: ['account_disabled', 'invalid_credentials']
                        message:
                            type: string
        response_body_404_500:
            properties:
                errors:
                    type: string
        zod_errors_400:
            properties:
                errors:
                    type: array
                    items:
                        type: object
                        properties:
                            code:
                                type: string
                            type:
                                type: string
                            message:
                                type: string
                            path:
                                type: array
                                items:
                                    type: string
        deactivate_admin_request_body:
            properties:
                id:
                    type: number
        deactivate_admin_success_response_200:
            properties:
                data:
                    type: string
                status:
                    type: string
        response_body_401_403:
            properties:
                errors:
                    type: string
                status:
                    type: string
        get_admins_success_response_200:
            properties:
                data:
                    type: object
                    properties:
                        rows:
                            type: array
                            items:
                                type: object
                                properties:
                                    id:
                                        type: number
                                    email:
                                        type: string
                                    firstname:
                                        type: string
                                    lastname:
                                        type: string
                                    roleId:
                                        type: number
                                    statusId:
                                        type: number
                                    lastActive:
                                        type: string
                                        format: date-time
                                    role:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                    status:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                        count:
                            type: number
                status:
                    type: string
        lookbook_schema:
            type: object
            properties:
                id:
                    type: number
                customerId:
                    type: number
                noOfLooks:
                    type: number
                statusId:
                    type: number
                occasion:
                    type: string
                dueBy:
                    type: string
                    format: date-time
                sentAt:
                    type: string
                    format: date-time
                status:
                    type: object
                    properties:
                        id:
                            type: number
                        name:
                            type: string
        get_lookbooks_success_response_200:
            properties:
                data:
                    type: object
                    properties:
                        rows:
                            type: object
                            properties:
                                To Do:
                                    type: array
                                    items:
                                        allOf:
                                            - $ref: '#/components/schemas/lookbook_schema'
                                In Progress:
                                    type: array
                                    items:
                                        allOf:
                                            - $ref: '#/components/schemas/lookbook_schema'
                                Queued:
                                    type: array
                                    items:
                                        allOf:
                                            - $ref: '#/components/schemas/lookbook_schema'

                        count:
                            type: number
                status:
                    type: string
        edit_admin_request_body:
            required: ['id']
            properties:
                id:
                    type: number
                firstname:
                    type: string
                lastname:
                    type: string
        change_password_request_body:
            properties:
                password:
                    type: string
                confirmPasswrd:
                    type: string
